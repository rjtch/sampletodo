apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-app-artifact
  annotations:
    description: |
      Build the container image of the todoApp Head service
    cd.artifact.packaged: enabled
spec:
  params:
    - name: gitRepository
      description: The git repository that hosts context and Dockerfile
      default: https://github.com/rjtch/sampletodo
    - name: gitRevision
      description: The git revision to build
      default: main
    - name: context
      description: The path to the docker notification service in the sources workspace
      default: .
    - name: notification
      description: The path to the docker notification service in the sources workspace
      default: notification
    - name: todo-service
      description: The path to the docker notification service in the sources workspace
      default: todo-service
    - name: user-service
      description: The path to the docker notification service in the sources workspace
      default: user-service
    - name: dockerfile
      description: The path to the dockerfile within the respective service
      default: context/Dockerfile
    - name: target
      description: The target container registry and path where to build the image
      default: kind-registry:5000/todoapp
    - name: target-name
      description: Name of the image to publish
      default: app
    - name: version
      description: the target version to build
      default: v1.0
    - name: storageDriver
      type: string
      description: Use storage driver type vfs if you are running on OpenShift.
      default: vfs
    - default: .
      description: The Knative Service name
      name: kn-service-name
      type: string
    - description: >-
        The fully qualified image name. If you are running on Minikube please
        use example.com/tekton-tutorial/greeter On OpenShift, use
        image-registry.minikube-image-registry.svc:5000/tekton-piplines/todo
      default: image-registry.minikube-image-registry.svc:5000/tekton-piplines/todo
      name: image-name 
      type: string
  workspaces:
    - name: maven-settings
      description: maven build workspace
    - name: source
      description: source build workspace
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.gitRevision)
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: source
    - name: build-app
      params:
        - name: GOALS
          value:
            - '-pl'
            - $(params.context)
            - '-B'
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - clone-repo
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: build-notification-image
      params:
        - name: CONTEXT
          value: $(params.notification)
        - name: IMAGE
          value: $(params.notification)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - build-app
      taskRef:
        kind: Task 
        name: buildah
      workspaces:
        - name: source
          workspace: source
    - name: build-userservice-image
      params:
        - name: CONTEXT
          value: $(params.user-service)
        - name: IMAGE
          value: $(params.user-service)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - build-notification-image
      taskRef:
        kind: Task 
        name: buildah
      workspaces:
        - name: source
          workspace: source
    - name: build-todoservice-image
      params:
        - name: CONTEXT
          value: $(params.todo-service)
        - name: IMAGE
          value: $(params.todo-service)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - build-userservice-image
      taskRef:
        kind: Task 
        name: buildah
      workspaces:
        - name: source
          workspace: source
  