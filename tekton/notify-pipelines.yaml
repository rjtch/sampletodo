apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-notification-artifact
  annotations:
    description: |
      Build the container image of the todoApp Head service
    cd.artifact.packaged: enabled
spec:
  params:
    - name: gitRepository
      description: The git repository that hosts context and Dockerfile
      default: https://github.com/rjtch/sampletodo
    - name: gitRevision
      description: The git revision to build
      default: main
    - name: context
      description: The path to the docker notification service in the sources workspace
      default: notification
    - name: dockerfile
      description: The path to the dockerfile within the respective service
#      default: ./Dockerfile
    - name: version
      description: the target version to build
      default: v1.0
    - name: storageDriver
      type: string
      description: Use storage driver type vfs if you are running on OpenShift.
      default: vfs
    - default: notification
      description: The Knative Service name
      name: kn-service-name
      type: string
    - description: >-
        The fully qualified image name. If you are running on Minikube please
        use example.com/tekton-tutorial/greeter On OpenShift, use
        image-registry.minikube-image-registry.svc:5000/tekton-piplines/todo
      default: localhost:5000
      name: image-name 
      type: string
  workspaces:
    - name: maven-settings
      description: maven build workspace
    - name: source
      description: source build workspace
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.gitRepository)
        - name: revision
          value: $(params.gitRevision)
        - name: deleteExisting
          value: 'true'
      workspaces:
        - name: output
          workspace: source
    - name: build-app-image
      params:
        - name: CONTEXT
          value: $(params.context)
        - name: IMAGE
          value: $(params.image-name)
        - name: STORAGE_DRIVER
          value: $(params.storageDriver)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - clone-repo
      taskRef:
        kind: Task
        name: buildah
      workspaces:
        - name: source
          workspace: source
    - name: deploy-kn-service
      params:
        - name: ARGS
          value:
            - service
            - create
            - $(params.kn-service-name)
            - '--force'
            - >-
              --image=$(params.image-name)@$(tasks.build-app-image.results.IMAGE_DIGEST) 
      runAfter:
        - build-app-image
      taskRef:
        kind: Task
        name: kn